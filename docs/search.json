[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop de Graficas Interactivas y articulos",
    "section": "",
    "text": "Gr√°ficas Interactivas y Figuras para Publicaciones Cient√≠ficas"
  },
  {
    "objectID": "index.html#informaci√≥n-general",
    "href": "index.html#informaci√≥n-general",
    "title": "Workshop de Graficas Interactivas y articulos",
    "section": "Informaci√≥n general",
    "text": "Informaci√≥n general\nEn esta clase exploraremos herramientas y buenas pr√°cticas para la creaci√≥n de gr√°ficas interactivas y figuras de alta calidad destinadas a art√≠culos cient√≠ficos.\nFecha: 7 de Junio, 2025\n\nInstructora:\n\nEvelia Lorena Coss-Navarrete - PostDoc, LIIGH-UNAM.\n\nAprenderemos a utilizar librer√≠as de R como ggplot2, plotly y ggiraph para generar visualizaciones claras, reproducibles y est√©ticamente adecuadas para publicaciones. Tambi√©n abordaremos c√≥mo adaptar las figuras a distintos formatos de revistas cient√≠ficas y c√≥mo exportarlas en alta resoluci√≥n.\nüì¶ Instrucciones para instalar y cargar los paquetes en R usando pacman\n\n\nCode\n# Paso 1: Instalar pacman (si no lo tienes a√∫n)\nif (!require(\"pacman\")) install.packages(\"pacman\")\n\n# Paso 2: Instalar y cargar todos los paquetes necesarios\npacman::p_load(\n  gapminder, plotly, tidyverse, DT, gtsummary,\n  rnaturalearth, rnaturalearthdata, patchwork,\n  sf, ggiraph, cowplot, viridis, hrbrthemes\n)"
  },
  {
    "objectID": "index.html#citar-y-reutilizar-el-material-del-curso",
    "href": "index.html#citar-y-reutilizar-el-material-del-curso",
    "title": "Workshop de Graficas Interactivas y articulos",
    "section": "Citar y reutilizar el material del curso",
    "text": "Citar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "salvavidas.html",
    "href": "salvavidas.html",
    "title": "1¬† Oportunidad especial para obtener el diploma",
    "section": "",
    "text": "Edici√≥n 2025, Parte 3 üå±\nQueremos que este curso no solo sea una experiencia de aprendizaje, sino tambi√©n una oportunidad para crecer, compartir y apoyar a quienes enfrentaron retos para asistir a todas las sesiones. Por eso, por √∫nica ocasi√≥n, ofrecemos una v√≠a alternativa para obtener el diploma: realizar un proyecto final y presentarlo en video.\nEsta opci√≥n es voluntaria y pensada con cari√±o, como un puente para quienes han estado comprometidos con el curso pero no pudieron estar presentes en todo momento. Adem√°s, tu proyecto puede convertirse en una herramienta valiosa para otras personas que deseen aprender, as√≠ que te invitamos a hacerlo con dedicaci√≥n y coraz√≥n üíõ\nComo toda oportunidad especial, esta opci√≥n tiene algunos requisitos importantes que deber√°s seguir. A continuaci√≥n, te compartimos las instrucciones:\n\n\n\n\n\n\nTrabajo individual\n\n\n\nInstrucciones:\n\nSeleccionar uno de los Datasets precargados en R o los que son propios de los paquetes.\nAnaliza los datos y genera 3 preguntas que puedas contestar con las variables que tienes.\nGenera un script completo que nos conteste las preguntas realizadas y nos de gr√°ficas de cada uno.\nNOTA: No olvides agregar la programaci√≥n defensiva y un poco de todo lo visto en clase (Manipulaci√≥n de datos, funciones, BUENAS PR√ÅCTICAS, ggplot2 o Complexheatmap).\nNOTA: No olvides que es muy importante documentar todo.\nEntregables:\n\nCrear un reporte o un libro en Rmarkdown o Quarto.\nGraba tu explicaci√≥n en un video de 15 min m√°ximo empleando Xaringan, Rmarkdown o Quarto en R (pr√°ctica el tiempo para que sea de provecho).\nSube todo a Github, el repositorio debe ser p√∫blico y debe contener tu reporte, presentaci√≥n y video. NO olvides poner tu nombre en el README.\n\nEntrega: 18 de junio 2025, 11 pm hora Ciudad de M√©xico"
  },
  {
    "objectID": "tema1.html#desglose-de-las-capas-comunes",
    "href": "tema1.html#desglose-de-las-capas-comunes",
    "title": "2¬† ggplot2",
    "section": "2.1 Desglose de las capas comunes",
    "text": "2.1 Desglose de las capas comunes\nA continuaci√≥n se presenta un desglose de cada una de las capas de la GG y los argumentos comunes de cada una de ellas que pueden servir de referencia:\n\nDatos:\n\nsus datos, en formato tidy o dataframe, proporcionar√°n los ingredientes para su trazado\nutilice las t√©cnicas dplyr para preparar los datos para un formato de trazado √≥ptimo\npor lo general, esto significa que debe tener una fila por cada observaci√≥n que desea trazar\n\nEst√©tica (Aesthetics / aes), para hacer visibles los datos\n\nx, y: variable a lo largo de los ejes x e y.\ncolour: color de las variables seg√∫n los datos.\nfill: color interior de la zona o relleno.\ngroup: a qu√© grupo pertenece una geom.\nshape: la figura utilizada para trazar un punto.\nlinetype: tipo de l√≠nea utilizada (s√≥lida, discontinua, etc.).\nsize: escala de tama√±o para una dimensi√≥n extra\nalpha: transparencia del objeto geom√©trico\n\nObjetos geom√©tricos (geoms - determina el tipo de trazado)\n\ngeom_point(): gr√°fico de dispersi√≥n\ngeom_line(): l√≠neas que conectan puntos aumentando el valor de x\ngeom_path(): l√≠neas que conectan puntos en secuencia de aparici√≥n\ngeom_boxplot(): gr√°fico de caja y bigotes para variables categ√≥ricas\ngeom_bar(): gr√°ficos de barras para el eje x categ√≥rico\ngeom_histogram(): histograma para eje x continuo\ngeom_violin(): n√∫cleo de distribuci√≥n de la dispersi√≥n de datos\ngeom_smooth(): l√≠nea de funci√≥n basada en datos\n\nFacetas:\n\nfacet_wrap() o facet_grid() para m√∫ltiplos peque√±os\n\nEstad√≠sticas:\n\nsimilar a geoms, pero computada\nmuestran medias, recuentos y otros res√∫menes estad√≠sticos de los datos\n\nCoordenadas - ajuste de datos en una p√°gina\n\ncoord_cartesian para establecer l√≠mites\ncoord_polar para gr√°ficos circulares\ncoord_map para diferentes proyecciones cartogr√°ficas\n\nTemas:\n\npar√°metros visuales generales\nfuentes, colores, formas, contornos"
  },
  {
    "objectID": "tema1.html#cheatsheet",
    "href": "tema1.html#cheatsheet",
    "title": "2¬† ggplot2",
    "section": "2.2 Cheatsheet",
    "text": "2.2 Cheatsheet\n\nM√°s informaci√≥n en en el Workshop 3: Introduction to data visualisation with ggplot2"
  },
  {
    "objectID": "tema1.html#ejercicios",
    "href": "tema1.html#ejercicios",
    "title": "2¬† ggplot2",
    "section": "2.3 Ejercicios",
    "text": "2.3 Ejercicios\nTe invitamos a que corras el ejercicio propuesto en el script ggplo2_R_Ladies_Morelia_.R por Fernanda Miron."
  },
  {
    "objectID": "Cap1_plotly.html#selecci√≥n-de-datos",
    "href": "Cap1_plotly.html#selecci√≥n-de-datos",
    "title": "3¬† Empleo de plotly",
    "section": "3.1 Selecci√≥n de datos",
    "text": "3.1 Selecci√≥n de datos\nEn este ejemplo vamos a visualizar la esperanza de vida (lifeExp), la poblaci√≥n total del pa√≠s (pop) y el producto interno bruto per c√°pita (gdpPercap) por cada pais, empleando la informaci√≥n general del conjunto de datos gapminder proveniente del paquete gapminder en R.\n\n\nCode\ndata &lt;- gapminder %&gt;% \n  filter(year==\"2007\") %&gt;% # seleccionar solo 2007 \n  dplyr::select(-year) # Eliminar la columna de year\n\n\n\n3.1.1 ¬øQu√© es un widget?\nUn widget es un componente interactivo de una interfaz gr√°fica. Es una pieza visual que permite a los usuarios interactuar con una aplicaci√≥n o presentaci√≥n.\nEn el contexto de R y especialmente de Plotly, Shiny, o R Markdown/Quarto, un widget es un elemento que se puede:\n\nmover, hacer clic, deslizar, seleccionar, o interactuar de alguna forma."
  },
  {
    "objectID": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-1",
    "href": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-1",
    "title": "3¬† Empleo de plotly",
    "section": "3.2 Visualizaci√≥n gr√°fica 1",
    "text": "3.2 Visualizaci√≥n gr√°fica 1\n\n\nCode\nplot1 &lt;- data %&gt;%\n  ggplot( aes(gdpPercap, lifeExp, size = pop, color=continent)) +\n  geom_point() +\n  theme_bw()\n# Grafica basica\nplot1\n\n\n\n\n\nConvertir a un gr√°fico interactivo\nLa funci√≥n ggplotly() es parte del paquete plotly en R, y su principal funci√≥n es convertir gr√°ficos hechos con ggplot2 en gr√°ficos interactivos.\n\n\nCode\nggplotly(plot1)\n\n\n\n\n\n\n¬°Y listo! Ahora el gr√°fico es interactivo.\n\n\n\n\n\n\n¬øCu√°ndo conviene usar plotly?\n\n\n\n\nCuando est√°s explorando datos y quieres ver detalles r√°pidamente.\nCuando presentas resultados a personas no t√©cnicas que quieren ‚Äújugar‚Äù con los datos.\nEn dashboards hechos con Shiny o presentaciones en R Markdown/Quarto HTML."
  },
  {
    "objectID": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-2",
    "href": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-2",
    "title": "3¬† Empleo de plotly",
    "section": "3.3 Visualizaci√≥n gr√°fica 2",
    "text": "3.3 Visualizaci√≥n gr√°fica 2\n\n\nCode\n# Seleccion de datos\nplot2_df &lt;- data %&gt;%\n  # Cambiar formatos\n  mutate(gdpPercap = round(gdpPercap,0)) %&gt;% # Eliminar decimales\n  mutate(pop = round(pop/1000000,2)) %&gt;% # Dejar en milones con dos decimas\n  mutate(lifeExp = round(lifeExp,1)) %&gt;% # dejar a una decimal\n  # Eeordenar esferas por pop\n  arrange(desc(pop)) %&gt;%\n  mutate(country = factor(country, country)) %&gt;%\n  # Preparar etiquetas (tooltip)\n  mutate(text = paste(\"Pais: \", country, \"\\nPoblaci√≥n (M): \", \n                      pop, \"\\nEsperanza de vida: \", lifeExp, \"\\nGdp per capita: \", gdpPercap, sep=\"\")) \n  \n# Grafica basica\nplot2 &lt;- plot2_df %&gt;%\n  ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +\n  geom_point(alpha=0.7) +\n  scale_size(range = c(1.4, 19), name=\"Poblaci√≥n (M)\") +\n  scale_color_viridis(discrete=TRUE, guide=FALSE) +\n  theme_ipsum() +\n  theme(legend.position=\"none\")\n\nplot2\n\n\n\n\n\nConvertir a plot interactivo\n\n\nCode\nplot2_interactive &lt;- ggplotly(plot2, tooltip=\"text\")\nplot2_interactive\n\n\n\n\n\n\nAlmacenar o guardar la informaci√≥n (widget)\n\n\nCode\nlibrary(htmlwidgets)\n\nsaveWidget(plot2_interactive, file= \"graphs/ggplotlyBubblechart.html\")\n\n\n\n\n\n\n\n\nEn resumen\n\n\n\n\nUn widget es cualquier elemento interactivo en una aplicaci√≥n o presentaci√≥n.\nLos gr√°ficos interactivos con Plotly son widgets."
  },
  {
    "objectID": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-3",
    "href": "Cap1_plotly.html#visualizaci√≥n-gr√°fica-3",
    "title": "3¬† Empleo de plotly",
    "section": "3.4 Visualizaci√≥n gr√°fica 3",
    "text": "3.4 Visualizaci√≥n gr√°fica 3\n\n3.4.1 Paso 1: Crear el gr√°fico con plot_ly()\n\n\nCode\nplot3 &lt;- gapminder %&gt;%\n  plot_ly(\n    x = ~gdpPercap,         # Eje X: PIB per c√°pita\n    y = ~lifeExp,           # Eje Y: Esperanza de vida\n    size = ~pop,            # Tama√±o de burbuja: Poblaci√≥n\n    color = ~continent,     # Color: Continente\n    frame = ~year,          # Fotograma para animaci√≥n: A√±o\n    text = ~country,        # Texto al pasar el cursor: Nombre del pa√≠s\n    hoverinfo = \"text\",     # Muestra solo el texto personalizado\n    type = 'scatter',       # Tipo de gr√°fico: Dispersi√≥n\n    mode = 'markers'        # Solo marcadores (sin l√≠neas)\n  )\n\n\nEsto genera un gr√°fico de burbujas por a√±o, con diferentes colores seg√∫n el continente y tama√±os seg√∫n la poblaci√≥n.\n\n\n3.4.2 Paso 2: Ajustar el eje X a escala logar√≠tmica\nComo los valores del PIB per c√°pita var√≠an mucho entre pa√≠ses, es mejor mostrar el eje X en escala logar√≠tmica para facilitar la comparaci√≥n:\n\n\nCode\nplot3_interactive &lt;- plot3 %&gt;% layout(\n  xaxis = list(\n    type = \"log\"  # Escala logar√≠tmica en el eje X\n  )\n)\n\n# Visualizar el gr√°fico\nplot3_interactive\n\n\n\n\n\n\nEsto muestra un gr√°fico animado, donde puedes:\n\nUsar los botones para avanzar a√±o por a√±o.\nHacer hover sobre un punto para ver el pa√≠s.\nHacer zoom o mover el gr√°fico con el mouse."
  },
  {
    "objectID": "Cap1_plotly.html#recomendaciones",
    "href": "Cap1_plotly.html#recomendaciones",
    "title": "3¬† Empleo de plotly",
    "section": "3.5 üìù Recomendaciones:",
    "text": "3.5 üìù Recomendaciones:\n\n\n\n\n\n\n\n¬øQuieres‚Ä¶?\nUsa‚Ä¶\n\n\n\n\nConvertir un gr√°fico ggplot2 a interactivo r√°pidamente\nggplotly()\n\n\nCrear un gr√°fico totalmente interactivo desde cero\nplot_ly()\n\n\nHacer animaciones (por a√±o, tiempo, etc.)\nplot_ly()\n\n\nPersonalizar profundamente la interacci√≥n del gr√°fico\nplot_ly()"
  },
  {
    "objectID": "Cap1_plotly.html#referencias",
    "href": "Cap1_plotly.html#referencias",
    "title": "3¬† Empleo de plotly",
    "section": "3.6 Referencias",
    "text": "3.6 Referencias\n\nEjemplo1: Plotly - Quick start\nEjemplo2: Plotly - Ejemplo 2 de burbujas\nEjemplo3: Plotly - Animacion"
  },
  {
    "objectID": "Cap2_ggiraph_p1.html#selecci√≥n-de-datos",
    "href": "Cap2_ggiraph_p1.html#selecci√≥n-de-datos",
    "title": "4¬† Pre-procesamiento de los datos",
    "section": "4.1 Selecci√≥n de datos",
    "text": "4.1 Selecci√≥n de datos\nNos gustar√≠a conocer la informaci√≥n relacionada con la esperanza de vida (lifeExp), la poblaci√≥n total del pa√≠s (pop) y el producto interno bruto per c√°pita (gdpPercap) de los pa√≠ses involucrados en el Proyecto JAGUAR durante el a√±o 2007, utilizando el conjunto de datos gapminder disponible a trav√©s del paquete gapminder en R.\n\n\nCode\n# Paises involucrados con el proyecto JAGUAR\nJAGUAR_paises &lt;-  c(\"Argentina\", \"Brazil\", \"Colombia\", \"Chile\", \"Mexico\", \"Peru\", \"Uruguay\")\n\n# Seleccionar la informacion relacionada con los paises del proyecto JAGUAR durante todos los years registrados\nJAGUAR_gapminder &lt;- gapminder::gapminder %&gt;% \n  # janitor::clean_names() %&gt;% # para limpiar y estandarizar los nombres de columnas de un data frame\n  mutate(\n    # Convertir paises de factor a caracter para tener capas independientes por paises en la figura interactiva\n    id = levels(country)[as.numeric(country)],\n    country = forcats::fct_reorder(country, lifeExp)) %&gt;% \n  filter(continent == \"Americas\") %&gt;%\n  filter(country %in% JAGUAR_paises) %&gt;% # seleccionar paises\n  droplevels()  # eliminar niveles de factor no utilizados\n\n\nRevisar informacion\n\n\nCode\n# Visualizar informacion en una tabla bonita\nJAGUAR_gapminder %&gt;%\n  DT::datatable()\n\n\n\n\n\n\n\nGuardar la variable\n\n\nCode\n# crear una carpeta para la salida\n# Eliminar si existe\nif (dir.exists(\"data\")) {\n  unlink(\"data\", recursive = TRUE)\n}\n\n# Crear el nuevo directorio\ndir.create(\"data\")\n\n# Guardar la variable\nsave(JAGUAR_gapminder, file = \"data/JAGUAR_gapminder.RData\")"
  },
  {
    "objectID": "Cap2_ggiraph_p1.html#estad√≠stica-descriptiva-de-los-datos",
    "href": "Cap2_ggiraph_p1.html#estad√≠stica-descriptiva-de-los-datos",
    "title": "4¬† Pre-procesamiento de los datos",
    "section": "4.2 Estad√≠stica descriptiva de los datos",
    "text": "4.2 Estad√≠stica descriptiva de los datos\nObtener un resumen descriptivo de la esperanza de vida media en los pa√≠ses seleccionados.\n\n\nCode\nJAGUAR_gapminder %&gt;%\n  select(-continent, -id) %&gt;% \n  tbl_summary(\n    by = country, \n    statistic = list(all_continuous() ~ \"{mean} ({sd})\", \n                     all_categorical() ~ \"{n} / {N} ({p}%)\"),\n    digits = all_continuous() ~ 2) %&gt;% \n  modify_caption(\"Caracteristicas de los paises (N = {N})\") %&gt;%\n  as_gt()\n\n\n\n\n\n\n  Caracteristicas de los paises (N = 84)\n  \n    \n      Characteristic\n      Peru\nN = 121\n      Brazil\nN = 121\n      Colombia\nN = 121\n      Mexico\nN = 121\n      Chile\nN = 121\n      Argentina\nN = 121\n      Uruguay\nN = 121\n    \n  \n  \n    year\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n    lifeExp\n58.86 (9.57)\n62.24 (7.04)\n63.90 (6.98)\n65.41 (8.19)\n67.43 (8.67)\n69.06 (4.19)\n70.78 (3.34)\n    pop\n17,559,093.00 (7,053,307.63)\n122,312,126.67 (45,747,618.44)\n27,256,099.58 (10,535,047.08)\n68,414,297.42 (26,954,820.63)\n11,205,725.33 (3,333,125.57)\n28,602,239.92 (7,546,608.99)\n2,912,487.17 (368,526.99)\n    gdpPercap\n5,613.84 (1,056.66)\n5,829.32 (2,436.45)\n4,195.34 (1,652.93)\n7,724.11 (2,770.81)\n6,703.29 (3,026.19)\n8,955.55 (1,862.58)\n7,100.13 (1,612.26)\n  \n  \n  \n    \n      1 Mean (SD)"
  },
  {
    "objectID": "Cap2_ggiraph_p1.html#referencias",
    "href": "Cap2_ggiraph_p1.html#referencias",
    "title": "4¬† Pre-procesamiento de los datos",
    "section": "4.3 Referencias",
    "text": "4.3 Referencias\n\nCap 6.5 EDA in tables - Tablas bonitas con estadistica\nCreating interactive visualizations with {ggiraph} (with or without Shiny)"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#panel-a.-paises-que-participan-en-jaguar-project",
    "href": "Cap3_ggiraph_p2.html#panel-a.-paises-que-participan-en-jaguar-project",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.1 Panel A. Paises que participan en JAGUAR project",
    "text": "5.1 Panel A. Paises que participan en JAGUAR project\n\n\nCode\n# Obtener los datos del mapa\nworld_map &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Filtrar los pa√≠ses de Am√©rica Latina incluyendo M√©xico\nlatin_america &lt;- subset(world_map, name %in% c(\"Brazil\", \"Uruguay\", \"Argentina\", \"French Guiana\", \"Suriname\", \"Colombia\", \"Venezuela\", \"Bolivia\", \"Ecuador\", \"Chile\", \"Paraguay\", \"Peru\", \"Guyana\", \"Panama\", \"Costa Rica\", \"Nicaragua\", \"Honduras\", \"Belize\", \"Guatemala\", \"Mexico\", \"Trinidad and Tobago\", \"Caribe\", \"Puerto Rico\"))\n\n# Paises involucrados con el proyecto JAGUAR\nJAGUAR_paises &lt;-  c(\"Argentina\", \"Brazil\", \"Colombia\", \"Chile\", \"Mexico\", \"Peru\", \"Uruguay\")\n\n# Definir los colores para los pa√≠ses\nlatin_america &lt;- latin_america %&gt;% mutate(color = \n  case_when(\n  name == \"Argentina\" ~ \"#3392d0\",\n  name == \"Brazil\" ~ \"#9e3995\",\n  name == \"Colombia\" ~ \"#0552a1\",\n  name == \"Chile\" ~ \"#de20a0\",\n  name == \"Mexico\" ~ \"#047e60\",\n  name == \"Peru\" ~ \"#ea2f34\",\n  name == \"Uruguay\" ~ \"#f8bf23\",\n  TRUE ~ \"lightgrey\"\n))\n\n\n# Crear el mapa con ggplot2\nmap_plot &lt;- ggplot(data = latin_america) +\n  geom_sf(aes(fill = color, text = name), color = \"black\") +  # a√±adir `text` para tooltips\n  scale_fill_identity() +\n  theme_void() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\") +\n  coord_sf()\n\n\nWarning in layer_sf(geom = GeomSf, data = data, mapping = mapping, stat = stat,\n: Ignoring unknown aesthetics: text\n\n\nCode\nmap_plot\n\n\n\n\n\n\n\n\n\n\n\nGuardar la figura\n\n\n\n\n\n5.1.1 ggsave\n\n\nCode\n# Guardar el mapa con alta calidad\nggsave(filename = \"graphs/mapa_latinoamerica.png\", \n       plot = map_plot, \n       width = 10,     # Ancho en pulgadas\n       height = 7,    # Altura en pulgadas\n       dpi = 300,     # Resoluci√≥n en p√≠xeles por pulgada\n       units = \"in\")  # Unidades de tama√±o\n\n\n\n\n5.1.2 png\n\n\nCode\npng(\"graphs/mapa_latinoamerica_optionB.png\")\nprint(map_plot)\ndev.off()"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#mi-primer-mapa-interactivo",
    "href": "Cap3_ggiraph_p2.html#mi-primer-mapa-interactivo",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.2 Mi primer mapa interactivo",
    "text": "5.2 Mi primer mapa interactivo\n\n\nCode\n# Crear el mapa\np_jaguar &lt;- ggplot() +\n  # Fondo gris para todos los pa√≠ses de Am√©rica Latina\n  geom_sf(data = latin_america, fill = \"lightgrey\", color = \"white\") +\n  \n  # Colorear los pa√≠ses del consorcio JAGUAR con interactividad\n  geom_sf_interactive(\n    data = filter(latin_america, name %in% JAGUAR_paises),\n    aes(fill = color, tooltip = name, data_id = name),\n    color = \"white\"\n  ) +\n  \n  scale_fill_identity() +  # Para usar directamente los colores definidos\n  coord_sf(crs = st_crs(3857)) +\n  theme_void() +\n  theme(legend.position = \"none\")\np_jaguar\n\n\n\n\n\nCode\n# Mostrar como mapa interactivo\ngirafe(ggobj = p_jaguar)"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#panel-b.-poblaci√≥n-total-por-paises",
    "href": "Cap3_ggiraph_p2.html#panel-b.-poblaci√≥n-total-por-paises",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.3 Panel B. Poblaci√≥n total por paises",
    "text": "5.3 Panel B. Poblaci√≥n total por paises\n\n\nCode\n# Crear el boxplot interactivo con los datos de JAGUAR_gapminder\nbox_plot &lt;- JAGUAR_gapminder %&gt;%\n  ggplot(aes(x = pop, y = country, fill = country, data_id = id)) +\n  # Agregar boxplots interactivos con ligero desplazamiento vertical\n  geom_boxplot_interactive(\n    position = position_nudge(y = 0.25),  # Desplaza los boxplots hacia abajo\n    width = 0.5 # Controla el ancho de las cajas\n  ) +\n  # Agregar marcas verticales tipo \"barra\" para valores individuales, tambi√©n interactivos\n  geom_point_interactive(\n    aes(col = country, tooltip = id),                  # Color por pa√≠s\n    position = position_nudge(y = -0.25),# Desplaza puntos hacia arriba\n    size = 8,                            # Tama√±o de la marca\n    shape = '|',                         # Tipo de marcador vertical\n    alpha = 0.75                         # Transparencia\n  ) +\n  scale_fill_manual(values = paises_pal) +\n  scale_color_manual(values = paises_pal) +\n  # Etiquetas y t√≠tulo del gr√°fico\n  labs(\n    x = 'Poblaci√≥n total (en a√±os)',\n    y = element_blank(),\n    title = glue::glue('Distribuci√≥n de la poblaci√≥n')\n  ) +\n  # Tema minimalista y ajustes est√©ticos\n  theme_minimal(base_size = 12) +\n  theme(\n    text = element_text(\n      color = 'grey20'\n    ),\n    legend.position = 'none',\n    panel.grid.minor = element_blank(),\n    plot.title.position = 'plot'\n  )\nbox_plot\n\n\n\n\n\n\n5.3.1 Volver interactivo\n\n\nCode\ngirafe(\n  ggobj = box_plot) # Objeto ggplot a convertir en interactivo\n\n\n\n\n\n\nActualmente, nuestro gr√°fico de l√≠neas se vuelve naranja cuando pasamos el rat√≥n por encima de ellas. Todo lo dem√°s permanece sin cambios. Cambi√©moslo para que todas las l√≠neas menos una se vuelvan transparentes.\nLa forma de hacerlo es pasar una lista de opciones a girafe(). Esta lista contendr√° opts_hover() y opts_hover_inv() para determinar el c√≥digo CSS que debe aplicarse. Adem√°s, fijemos el tama√±o de nuestra trama con opts_sizing().\n\n\nCode\n# Convertir en gr√°fico interactivo\ngirafe(\n  ggobj = box_plot,  # Gr√°fico generado con geom_*_interactive\n  options = list(\n    opts_hover(css = ''),   # Estilo CSS para el elemento bajo el cursor\n    opts_hover_inv(css = \"opacity:0.1;\"), # Estilo CSS para los dem√°s elementos (baja opacidad)\n    opts_sizing(rescale = FALSE) # Mantiene el tama√±o fijo del gr√°fico\n  ),\n  \n  height_svg = 6,  # Altura del gr√°fico en SVG\n  width_svg = 9    # Ancho del gr√°fico en SVG\n)\n\n\n\n\n\n\n\n\n\n\n\n\nNotas\n\n\n\n\nline_chart debe ser un objeto creado con ggplot() que use geoms interactivos como geom_line_interactive().\nopts_hover(css = ''): puedes personalizar aqu√≠ el estilo al pasar el mouse sobre una l√≠nea (ej. cambiar color o grosor).\nopts_hover_inv(css = 'opacity:0.1;'): permite resaltar una l√≠nea al atenuar las otras.\nheight_svg y width_svg definen el tama√±o del gr√°fico exportado/interactivo."
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#panel-c.-esperanza-de-vida-atraves-del-tiempo",
    "href": "Cap3_ggiraph_p2.html#panel-c.-esperanza-de-vida-atraves-del-tiempo",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.4 Panel C. Esperanza de vida atraves del tiempo",
    "text": "5.4 Panel C. Esperanza de vida atraves del tiempo\n\n\nCode\n# Crear archivo de lineas sobre la esperanza de vida\nline_chart &lt;- JAGUAR_gapminder %&gt;%\n  ggplot(aes(x = year, y = lifeExp, col = country, data_id = id)) +\n  geom_line_interactive(linewidth = 2.5) +\n  geom_point_interactive(aes(tooltip = id), size = 4) +\n  theme_minimal(base_size = 12) +\n  labs(\n    x = element_blank(),\n    y = 'Esperanza de vida \\n(en a√±os)',\n    title = 'Esperanza de vida a lo largo del tiempo'\n  ) +\n  theme(\n    text = element_text(\n      color = 'grey20'\n    ),\n    legend.position = 'none',\n    panel.grid.minor = element_blank(),\n    plot.title.position = 'plot') +\n  scale_color_manual(values = paises_pal)\n\nline_chart\n\n\n\n\n\n\n5.4.1 Volver interactivo\n\n\nCode\ngirafe(\n  ggobj = line_chart, # Objeto ggplot a convertir en interactivo\n  # Seleccionar el Estilo CSS para la l√≠nea sobre la que se pasa el cursor\n  options = list(\n    opts_hover(css = ''), ## CSS code of line we're hovering over\n     # Estilo CSS para las dem√°s l√≠neas que no est√°n siendo enfocadas (reduce opacidad)\n    opts_hover_inv(css = \"opacity:0.1;\"), ## CSS code of all other lines\n    # Fija el tama√±o del gr√°fico (no permite que cambie con el tama√±o del contenedor)\n    opts_sizing(rescale = FALSE) ## Fixes sizes to dimensions below\n  ),\n  # Altura del gr√°fico en unidades SVG\n  height_svg = 6,\n  # Ancho del gr√°fico en unidades SVG\n  width_svg = 9\n)"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#unir-panel-b-y-c",
    "href": "Cap3_ggiraph_p2.html#unir-panel-b-y-c",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.5 Unir Panel B y C",
    "text": "5.5 Unir Panel B y C\n\n\nCode\ninteractive_plot &lt;- girafe(\n  # Combina el boxplot y el gr√°fico de l√≠neas en una sola visualizaci√≥n interactiva\n  ggobj = box_plot + plot_spacer() + line_chart + \n    plot_layout(widths = c(0.45, 0.1, 0.45)),\n  # Opciones de interactividad para girafe\n  options = list(\n    opts_hover(css = ''),\n    opts_hover_inv(css = \"opacity:0.1;\"), \n    opts_sizing(rescale = FALSE)\n  ),\n  # Dimensiones del gr√°fico en unidades SVG\n  height_svg = 6,\n  width_svg = 8\n)\n\ninteractive_plot"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#unir-panel-a-b-y-c",
    "href": "Cap3_ggiraph_p2.html#unir-panel-a-b-y-c",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.6 Unir Panel A, B y C",
    "text": "5.6 Unir Panel A, B y C\n\n\nCode\n# Layout con patchwork: mapa arriba, boxplot + line_chart abajo\nlayout_total &lt;- p_jaguar | (box_plot / line_chart) + plot_layout(widths = c(0.45, 0.1, 0.45)) \n#+ plot_layout(heights = c(0.5, 0.5))  # mitad mapa, mitad box + l√≠nea\n\n# Convertir todo en visualizaci√≥n interactiva\ninteractive_plot &lt;- girafe(\n  ggobj = layout_total,\n  options = list(\n    opts_hover(css = ''),\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_sizing(rescale = FALSE)\n  ),\n  height_svg = 6,\n  width_svg = 8\n)\n\ninteractive_plot\n\n\n\n\n\n\nGuardar el plot interactivo\n\n\nCode\nhtmltools::save_html(interactive_plot, \"graphs/multiple-ggiraph-1.html\")"
  },
  {
    "objectID": "Cap3_ggiraph_p2.html#referencias",
    "href": "Cap3_ggiraph_p2.html#referencias",
    "title": "5¬† Empleo de ggiraph",
    "section": "5.7 Referencias",
    "text": "5.7 Referencias\n\nCreating interactive visualizations with {ggiraph} (with or without Shiny)\nMore complex CSS\nggiraph manual"
  },
  {
    "objectID": "Cap4_ggiraph_examples.html#ejemplo-1",
    "href": "Cap4_ggiraph_examples.html#ejemplo-1",
    "title": "6¬† Otros ejemplos con ggiraph",
    "section": "6.1 Ejemplo 1",
    "text": "6.1 Ejemplo 1\n\n\nCode\n# Example data - replace with your data\nmap_data &lt;- data.frame(\n  id = 1:3,\n  lat = c(40, 42, 37),\n  lon = c(-100, -120, -95),\n  group = c(\"A\", \"B\", \"C\")\n)\n\nline_data &lt;- data.frame(\n  id = rep(1:3, each = 10),\n  time = rep(seq(as.Date(\"2021-01-01\"), by = \"1 month\", length.out = 10), 3),\n  value = rnorm(30),\n  group = rep(c(\"A\", \"B\", \"C\"), each = 10)\n)\n\n# Map with interactive points\nmap_plot &lt;- ggplot() +\n  borders(\"world\", colour = \"gray80\", fill = \"gray90\") +  # Add a world map background\n  geom_point_interactive(data = map_data, aes(x = lon, y = lat, size = 5, color=group, tooltip = group, data_id = group)) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  coord_sf(xlim = c(-130, -65), ylim = c(10, 75)) \n\n\n# Line chart with interactive lines\nline_plot &lt;- ggplot(line_data, aes(x = time, y = value, group = group, color=group)) +\n  geom_line_interactive(aes(data_id = group, tooltip = group))\n\ncombined_plot &lt;- girafe(\n  ggobj = map_plot + plot_spacer() + line_plot + plot_layout(widths = c(0.35, 0, 0.65)),\n  options = list(\n    opts_hover(css = ''),\n    opts_hover_inv(css = \"opacity:0.1;\"), \n    opts_sizing(rescale = FALSE)\n  ),\n  height_svg = 4,\n  width_svg = 12\n)\n\n\n\n\nCode\ncombined_plot"
  },
  {
    "objectID": "Cap4_ggiraph_examples.html#ejemplo-2",
    "href": "Cap4_ggiraph_examples.html#ejemplo-2",
    "title": "6¬† Otros ejemplos con ggiraph",
    "section": "6.2 Ejemplo 2",
    "text": "6.2 Ejemplo 2\n\n\nCode\n# Read the full world map\nworld_sf &lt;- read_sf(\"https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world.geojson\")\nworld_sf &lt;- world_sf %&gt;%\n  filter(!name %in% c(\"Antarctica\", \"Greenland\"))\n\n# Create a sample dataset\nhappiness_data &lt;- data.frame(\n  Country = c(\n    \"France\", \"Germany\", \"United Kingdom\",\n    \"Japan\", \"China\", \"Vietnam\",\n    \"United States of America\", \"Canada\", \"Mexico\"\n  ),\n  Continent = c(\n    \"Europe\", \"Europe\", \"Europe\",\n    \"Asia\", \"Asia\", \"Asia\",\n    \"North America\", \"North America\", \"North America\"\n  ),\n  Happiness_Score = rnorm(mean = 30, sd = 20, n = 9),\n  GDP_per_capita = rnorm(mean = 30, sd = 20, n = 9),\n  Social_support = rnorm(mean = 30, sd = 20, n = 9),\n  Healthy_life_expectancy = rnorm(mean = 30, sd = 20, n = 9)\n)\n\n# Join the happiness data with the full world map\nworld_sf &lt;- world_sf %&gt;%\n  left_join(happiness_data, by = c(\"name\" = \"Country\"))\n\n# Create the first chart (Scatter plot)\np1 &lt;- ggplot(world_sf, aes(\n  GDP_per_capita,\n  Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  color = Continent\n)) +\n  geom_point_interactive(data = filter(world_sf, !is.na(Happiness_Score)), size = 4) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the second chart (Bar plot)\np2 &lt;- ggplot(world_sf, aes(\n  x = reorder(name, Happiness_Score),\n  y = Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  fill = Continent\n)) +\n  geom_col_interactive(data = filter(world_sf, !is.na(Happiness_Score))) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the third chart (choropleth)\n# Create the third chart (choropleth)\np3 &lt;- ggplot() +\n  geom_sf(data = world_sf, fill = \"lightgrey\", color = \"lightgrey\") +\n  geom_sf_interactive(\n    data = filter(world_sf, !is.na(Happiness_Score)),\n    aes(fill = Continent, tooltip = name, data_id = Continent)\n  ) +\n  coord_sf(crs = st_crs(3857)) +\n  theme_void() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Combine the plots\ncombined_plot &lt;- (p1 + p2) / p3 + plot_layout(heights = c(1, 2))\n\n# Create CSS\ntooltip_css &lt;- \"\n  border-radius: 12px;\n  color: #333;\n  background-color: white;\n  padding: 10px;\n  font-size: 14px;\n  transition: all 0.5s ease-out;\n\"\n\nhover_css &lt;- \"\n  filter: brightness(75%);\n  cursor: pointer;\n  transition: all 0.5s ease-out;\n  filter: brightness(1.15);\n\"\n\n# Create the interactive plot\ninteractive_plot &lt;- girafe(ggobj = combined_plot)\n# Add interactivity\ninteractive_plot &lt;- interactive_plot %&gt;%\n  girafe_options(\n    opts_hover(css = hover_css),\n    opts_tooltip(css = tooltip_css),\n    opts_hover_inv(css = \"opacity:0.3; transition: all 0.2s ease-out;\")\n  )\ninteractive_plot\n\n\n\n\n\n\n\n\n\n\n\n\nOtras graficas\n\n\n\nDe igual manera existen otros paquetes interactivos que puedes visitar y emplear:\nChapter 13 Interactive Graphs"
  },
  {
    "objectID": "Cap4_ggiraph_examples.html#referencias",
    "href": "Cap4_ggiraph_examples.html#referencias",
    "title": "6¬† Otros ejemplos con ggiraph",
    "section": "6.3 Referencias",
    "text": "6.3 Referencias\n\nEjemplo1: Productive workflow - ggiraph\nEjemplo2: Graficas ggiraph y CSS\nChapter 13 Interactive Graphs"
  },
  {
    "objectID": "tema2.html#recomendaciones-para-crear-figuras-completas-en-r",
    "href": "tema2.html#recomendaciones-para-crear-figuras-completas-en-r",
    "title": "7¬† Figuras para Publicaciones Cient√≠ficas",
    "section": "7.1 üé® Recomendaciones para crear figuras completas en R",
    "text": "7.1 üé® Recomendaciones para crear figuras completas en R\nPara combinar m√∫ltiples gr√°ficos en una sola figura o panel, podemos utilizar paquetes como cowplot y patchwork. Estas herramientas son muy √∫tiles para organizar visualizaciones de forma clara y profesional, como en el ejemplo que te mostr√© anteriormente.\nAdem√°s, es fundamental seguir practicando y form√°ndote continuamente. Por ello, recomiendo tomar cursos especializados en visualizaci√≥n de datos con R, ya que te permitir√°n mejorar tus habilidades y aprender buenas pr√°cticas.\nUno de los cursos que recomiendo es:\n\nPublication Perfect, Github, pagina web, Ejemplo de figura completa\nCreating Publication Quality Graphics in R, Libro, Ejemplo de figura completa\nCreating publication quality graphs in R, ejemplos"
  },
  {
    "objectID": "Cap5_QuartoJournals.html#por-qu√©-usar-quarto-para-tus-art√≠culos",
    "href": "Cap5_QuartoJournals.html#por-qu√©-usar-quarto-para-tus-art√≠culos",
    "title": "8¬† Escritura de articulos en Quarto",
    "section": "8.1 üöÄ ¬øPor qu√© usar Quarto para tus art√≠culos?",
    "text": "8.1 üöÄ ¬øPor qu√© usar Quarto para tus art√≠culos?\n\nIntegra c√≥digo R, Python y otros lenguajes directamente en el documento.\nProduce documentos en m√∫ltiples formatos: HTML, PDF, Word, e incluso presentaciones.\nPermite automatizar la generaci√≥n de resultados y figuras, manteniendo todo actualizado.\nEs ideal para fomentar la reproducibilidad cient√≠fica."
  },
  {
    "objectID": "Cap5_QuartoJournals.html#recursos-para-aprender-m√°s",
    "href": "Cap5_QuartoJournals.html#recursos-para-aprender-m√°s",
    "title": "8¬† Escritura de articulos en Quarto",
    "section": "8.2 üìö Recursos para aprender m√°s",
    "text": "8.2 üìö Recursos para aprender m√°s\n\nCurso oficial gratuito por parte de Quarto, Journal Articles\nIntroduction to Reproducible Publications with Quarto,Carpentries\nManual completo de Quarto, libro"
  },
  {
    "objectID": "Cap6_Completefigure.html#ejemplo-1--patchwork",
    "href": "Cap6_Completefigure.html#ejemplo-1--patchwork",
    "title": "9¬† Creaci√≥n de Figuras completas paso a paso",
    "section": "9.1 Ejemplo 1- patchwork",
    "text": "9.1 Ejemplo 1- patchwork"
  },
  {
    "objectID": "Cap6_Completefigure.html#ejemplo-2---patchwork-grid",
    "href": "Cap6_Completefigure.html#ejemplo-2---patchwork-grid",
    "title": "9¬† Creaci√≥n de Figuras completas paso a paso",
    "section": "9.2 Ejemplo 2 - patchwork + grid",
    "text": "9.2 Ejemplo 2 - patchwork + grid"
  },
  {
    "objectID": "Cap6_Completefigure.html#ejemplo-3---cowplot",
    "href": "Cap6_Completefigure.html#ejemplo-3---cowplot",
    "title": "9¬† Creaci√≥n de Figuras completas paso a paso",
    "section": "9.3 Ejemplo 3 - cowplot",
    "text": "9.3 Ejemplo 3 - cowplot"
  },
  {
    "objectID": "Cap6_Completefigure.html#ejemplo-4",
    "href": "Cap6_Completefigure.html#ejemplo-4",
    "title": "9¬† Creaci√≥n de Figuras completas paso a paso",
    "section": "9.4 Ejemplo 4",
    "text": "9.4 Ejemplo 4"
  },
  {
    "objectID": "Cap6_Completefigure.html#referencias",
    "href": "Cap6_Completefigure.html#referencias",
    "title": "9¬† Creaci√≥n de Figuras completas paso a paso",
    "section": "9.5 Referencias",
    "text": "9.5 Referencias\n\nEjemplo 1: usando patchwork y gapminder\nEjemplo 2: usando patchwork, gridExtra y gapminder\nEjemplo 3: Pajaritos\nEjemplo 4: Unir informacion de una figura"
  }
]