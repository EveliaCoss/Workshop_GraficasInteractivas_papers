[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop_GraficasInteractivas_papers",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "Cap1_Datos.html#selección-de-datos",
    "href": "Cap1_Datos.html#selección-de-datos",
    "title": "2  Pre-procesamiento de los datos",
    "section": "2.1 Selección de datos",
    "text": "2.1 Selección de datos\nNos gustaría conocer la información relacionada con la esperanza de vida (lifeExp), la población total del país (pop) y el producto interno bruto per cápita (gdpPercap) de los países involucrados en el Proyecto JAGUAR durante el año 2007, utilizando el conjunto de datos gapminder disponible a través del paquete gapminder en R.\n\n# Paises involucrados con el proyecto JAGUAR\nJAGUAR_paises &lt;-  c(\"Argentina\", \"Brazil\", \"Colombia\", \"Chile\", \"Mexico\", \"Peru\", \"Uruguay\")\n\n# Seleccionar la informacion relacionada con los paises del proyecto JAGUAR durante todos los years registrados\nJAGUAR_gapminder &lt;- gapminder::gapminder %&gt;% \n  # janitor::clean_names() %&gt;% # para limpiar y estandarizar los nombres de columnas de un data frame\n  mutate(\n    # Convertir paises de factor a caracter para tener capas independientes por paises en la figura interactiva\n    id = levels(country)[as.numeric(country)],\n    country = forcats::fct_reorder(country, lifeExp)) %&gt;% \n  filter(continent == \"Americas\") %&gt;%\n  filter(country %in% JAGUAR_paises) %&gt;% # seleccionar paises\n  droplevels()  # eliminar niveles de factor no utilizados\n\nRevisar informacion\n\n# Visualizar informacion en una tabla bonita\nJAGUAR_gapminder %&gt;%\n  DT::datatable()\n\n\n\n\n\n\nGuardar la variable\n\n# crear una carpeta para la salida\n# Eliminar si existe\nif (dir.exists(\"data\")) {\n  unlink(\"data\", recursive = TRUE)\n}\n\n# Crear el nuevo directorio\ndir.create(\"data\")\n\n# Guardar la variable\nsave(JAGUAR_gapminder, file = \"data/JAGUAR_gapminder.RData\")"
  },
  {
    "objectID": "Cap1_Datos.html#estadística-descriptiva-de-los-datos",
    "href": "Cap1_Datos.html#estadística-descriptiva-de-los-datos",
    "title": "2  Pre-procesamiento de los datos",
    "section": "2.2 Estadística descriptiva de los datos",
    "text": "2.2 Estadística descriptiva de los datos\nObtener un resumen descriptivo de la esperanza de vida media en los países seleccionados.\n\nJAGUAR_gapminder %&gt;%\n  select(-continent, -id) %&gt;% \n  tbl_summary(\n    by = country, \n    statistic = list(all_continuous() ~ \"{mean} ({sd})\", \n                     all_categorical() ~ \"{n} / {N} ({p}%)\"),\n    digits = all_continuous() ~ 2) %&gt;% \n  modify_caption(\"Caracteristicas de los paises (N = {N})\") %&gt;%\n  as_gt()\n\n\n\n\n\n  Caracteristicas de los paises (N = 84)\n  \n    \n      Characteristic\n      Peru\nN = 121\n      Brazil\nN = 121\n      Colombia\nN = 121\n      Mexico\nN = 121\n      Chile\nN = 121\n      Argentina\nN = 121\n      Uruguay\nN = 121\n    \n  \n  \n    year\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n1,979.50 (18.03)\n    lifeExp\n58.86 (9.57)\n62.24 (7.04)\n63.90 (6.98)\n65.41 (8.19)\n67.43 (8.67)\n69.06 (4.19)\n70.78 (3.34)\n    pop\n17,559,093.00 (7,053,307.63)\n122,312,126.67 (45,747,618.44)\n27,256,099.58 (10,535,047.08)\n68,414,297.42 (26,954,820.63)\n11,205,725.33 (3,333,125.57)\n28,602,239.92 (7,546,608.99)\n2,912,487.17 (368,526.99)\n    gdpPercap\n5,613.84 (1,056.66)\n5,829.32 (2,436.45)\n4,195.34 (1,652.93)\n7,724.11 (2,770.81)\n6,703.29 (3,026.19)\n8,955.55 (1,862.58)\n7,100.13 (1,612.26)\n  \n  \n  \n    \n      1 Mean (SD)"
  },
  {
    "objectID": "Cap1_Datos.html#referencias",
    "href": "Cap1_Datos.html#referencias",
    "title": "2  Pre-procesamiento de los datos",
    "section": "2.3 Referencias",
    "text": "2.3 Referencias\n\nCap 6.5 EDA in tables - Tablas bonitas con estadistica\nCreating interactive visualizations with {ggiraph} (with or without Shiny)"
  },
  {
    "objectID": "Cap2_Mapas.html#panel-a.-paises-que-participan-en-jaguar-project",
    "href": "Cap2_Mapas.html#panel-a.-paises-que-participan-en-jaguar-project",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.1 Panel A. Paises que participan en JAGUAR project",
    "text": "3.1 Panel A. Paises que participan en JAGUAR project\n\n# Obtener los datos del mapa\nworld_map &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Filtrar los países de América Latina incluyendo México\nlatin_america &lt;- subset(world_map, name %in% c(\"Brazil\", \"Uruguay\", \"Argentina\", \"French Guiana\", \"Suriname\", \"Colombia\", \"Venezuela\", \"Bolivia\", \"Ecuador\", \"Chile\", \"Paraguay\", \"Peru\", \"Guyana\", \"Panama\", \"Costa Rica\", \"Nicaragua\", \"Honduras\", \"Belize\", \"Guatemala\", \"Mexico\", \"Trinidad and Tobago\", \"Caribe\", \"Puerto Rico\"))\n\n# Paises involucrados con el proyecto JAGUAR\nJAGUAR_paises &lt;-  c(\"Argentina\", \"Brazil\", \"Colombia\", \"Chile\", \"Mexico\", \"Peru\", \"Uruguay\")\n\n# Definir los colores para los países\nlatin_america &lt;- latin_america %&gt;% mutate(color = \n  case_when(\n  name == \"Argentina\" ~ \"#3392d0\",\n  name == \"Brazil\" ~ \"#9e3995\",\n  name == \"Colombia\" ~ \"#0552a1\",\n  name == \"Chile\" ~ \"#de20a0\",\n  name == \"Mexico\" ~ \"#047e60\",\n  name == \"Peru\" ~ \"#ea2f34\",\n  name == \"Uruguay\" ~ \"#f8bf23\",\n  TRUE ~ \"lightgrey\"\n))\n\n\n# Crear el mapa con ggplot2\nmap_plot &lt;- ggplot(data = latin_america) +\n  geom_sf(aes(fill = color, text = name), color = \"black\") +  # añadir `text` para tooltips\n  scale_fill_identity() +\n  theme_void() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\") +\n  coord_sf()\n\nWarning in layer_sf(geom = GeomSf, data = data, mapping = mapping, stat = stat,\n: Ignoring unknown aesthetics: text\n\nmap_plot\n\n\n\n\n\n\n\n\n\n\nGuardar la figura\n\n\n\n\n\n3.1.1 ggsave\n\n# Guardar el mapa con alta calidad\nggsave(filename = \"graphs/mapa_latinoamerica.png\", \n       plot = map_plot, \n       width = 10,     # Ancho en pulgadas\n       height = 7,    # Altura en pulgadas\n       dpi = 300,     # Resolución en píxeles por pulgada\n       units = \"in\")  # Unidades de tamaño\n\n\n\n3.1.2 png\n\npng(\"graphs/mapa_latinoamerica_optionB.png\")\nprint(map_plot)\ndev.off()"
  },
  {
    "objectID": "Cap2_Mapas.html#mi-primer-mapa-interactivo",
    "href": "Cap2_Mapas.html#mi-primer-mapa-interactivo",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.2 Mi primer mapa interactivo",
    "text": "3.2 Mi primer mapa interactivo\n\n# Crear el mapa\np_jaguar &lt;- ggplot() +\n  # Fondo gris para todos los países de América Latina\n  geom_sf(data = latin_america, fill = \"lightgrey\", color = \"white\") +\n  \n  # Colorear los países del consorcio JAGUAR con interactividad\n  geom_sf_interactive(\n    data = filter(latin_america, name %in% JAGUAR_paises),\n    aes(fill = color, tooltip = name, data_id = name),\n    color = \"white\"\n  ) +\n  \n  scale_fill_identity() +  # Para usar directamente los colores definidos\n  coord_sf(crs = st_crs(3857)) +\n  theme_void() +\n  theme(legend.position = \"none\")\np_jaguar\n\n\n\n# Mostrar como mapa interactivo\ngirafe(ggobj = p_jaguar)"
  },
  {
    "objectID": "Cap2_Mapas.html#panel-b.-población-total-por-paises",
    "href": "Cap2_Mapas.html#panel-b.-población-total-por-paises",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.3 Panel B. Población total por paises",
    "text": "3.3 Panel B. Población total por paises\n\n# Crear el boxplot interactivo con los datos de JAGUAR_gapminder\nbox_plot &lt;- JAGUAR_gapminder %&gt;%\n  ggplot(aes(x = pop, y = country, fill = country, data_id = id)) +\n  # Agregar boxplots interactivos con ligero desplazamiento vertical\n  geom_boxplot_interactive(\n    position = position_nudge(y = 0.25),  # Desplaza los boxplots hacia abajo\n    width = 0.5 # Controla el ancho de las cajas\n  ) +\n  # Agregar marcas verticales tipo \"barra\" para valores individuales, también interactivos\n  geom_point_interactive(\n    aes(col = country, tooltip = id),                  # Color por país\n    position = position_nudge(y = -0.25),# Desplaza puntos hacia arriba\n    size = 8,                            # Tamaño de la marca\n    shape = '|',                         # Tipo de marcador vertical\n    alpha = 0.75                         # Transparencia\n  ) +\n  scale_fill_manual(values = paises_pal) +\n  scale_color_manual(values = paises_pal) +\n  # Etiquetas y título del gráfico\n  labs(\n    x = 'Población total (en años)',\n    y = element_blank(),\n    title = glue::glue('Distribución de la población')\n  ) +\n  # Tema minimalista y ajustes estéticos\n  theme_minimal(base_size = 12) +\n  theme(\n    text = element_text(\n      color = 'grey20'\n    ),\n    legend.position = 'none',\n    panel.grid.minor = element_blank(),\n    plot.title.position = 'plot'\n  )\nbox_plot\n\n\n\n\n\n3.3.1 Volver interactivo\n\ngirafe(\n  ggobj = box_plot) # Objeto ggplot a convertir en interactivo\n\n\n\n\n\nActualmente, nuestro gráfico de líneas se vuelve naranja cuando pasamos el ratón por encima de ellas. Todo lo demás permanece sin cambios. Cambiémoslo para que todas las líneas menos una se vuelvan transparentes.\nLa forma de hacerlo es pasar una lista de opciones a girafe(). Esta lista contendrá opts_hover() y opts_hover_inv() para determinar el código CSS que debe aplicarse. Además, fijemos el tamaño de nuestra trama con opts_sizing().\n\n# Convertir en gráfico interactivo\ngirafe(\n  ggobj = box_plot,  # Gráfico generado con geom_*_interactive\n  options = list(\n    opts_hover(css = ''),   # Estilo CSS para el elemento bajo el cursor\n    opts_hover_inv(css = \"opacity:0.1;\"), # Estilo CSS para los demás elementos (baja opacidad)\n    opts_sizing(rescale = FALSE) # Mantiene el tamaño fijo del gráfico\n  ),\n  \n  height_svg = 6,  # Altura del gráfico en SVG\n  width_svg = 9    # Ancho del gráfico en SVG\n)\n\n\n\n\n\n\n\n\n\n\n\nNotas\n\n\n\n\nline_chart debe ser un objeto creado con ggplot() que use geoms interactivos como geom_line_interactive().\nopts_hover(css = ''): puedes personalizar aquí el estilo al pasar el mouse sobre una línea (ej. cambiar color o grosor).\nopts_hover_inv(css = 'opacity:0.1;'): permite resaltar una línea al atenuar las otras.\nheight_svg y width_svg definen el tamaño del gráfico exportado/interactivo."
  },
  {
    "objectID": "Cap2_Mapas.html#panel-c.-esperanza-de-vida-atraves-del-tiempo",
    "href": "Cap2_Mapas.html#panel-c.-esperanza-de-vida-atraves-del-tiempo",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.4 Panel C. Esperanza de vida atraves del tiempo",
    "text": "3.4 Panel C. Esperanza de vida atraves del tiempo\n\n# Crear archivo de lineas sobre la esperanza de vida\nline_chart &lt;- JAGUAR_gapminder %&gt;%\n  ggplot(aes(x = year, y = lifeExp, col = country, data_id = id)) +\n  geom_line_interactive(linewidth = 2.5) +\n  geom_point_interactive(aes(tooltip = id), size = 4) +\n  theme_minimal(base_size = 12) +\n  labs(\n    x = element_blank(),\n    y = 'Esperanza de vida \\n(en años)',\n    title = 'Esperanza de vida a lo largo del tiempo'\n  ) +\n  theme(\n    text = element_text(\n      color = 'grey20'\n    ),\n    legend.position = 'none',\n    panel.grid.minor = element_blank(),\n    plot.title.position = 'plot') +\n  scale_color_manual(values = paises_pal)\n\nline_chart\n\n\n\n\n\n3.4.1 Volver interactivo\n\ngirafe(\n  ggobj = line_chart, # Objeto ggplot a convertir en interactivo\n  # Seleccionar el Estilo CSS para la línea sobre la que se pasa el cursor\n  options = list(\n    opts_hover(css = ''), ## CSS code of line we're hovering over\n     # Estilo CSS para las demás líneas que no están siendo enfocadas (reduce opacidad)\n    opts_hover_inv(css = \"opacity:0.1;\"), ## CSS code of all other lines\n    # Fija el tamaño del gráfico (no permite que cambie con el tamaño del contenedor)\n    opts_sizing(rescale = FALSE) ## Fixes sizes to dimensions below\n  ),\n  # Altura del gráfico en unidades SVG\n  height_svg = 6,\n  # Ancho del gráfico en unidades SVG\n  width_svg = 9\n)"
  },
  {
    "objectID": "Cap2_Mapas.html#unir-panel-b-y-c",
    "href": "Cap2_Mapas.html#unir-panel-b-y-c",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.5 Unir Panel B y C",
    "text": "3.5 Unir Panel B y C\n\ninteractive_plot &lt;- girafe(\n  # Combina el boxplot y el gráfico de líneas en una sola visualización interactiva\n  ggobj = box_plot + plot_spacer() + line_chart + \n    plot_layout(widths = c(0.45, 0.1, 0.45)),\n  # Opciones de interactividad para girafe\n  options = list(\n    opts_hover(css = ''),\n    opts_hover_inv(css = \"opacity:0.1;\"), \n    opts_sizing(rescale = FALSE)\n  ),\n  # Dimensiones del gráfico en unidades SVG\n  height_svg = 6,\n  width_svg = 8\n)\n\ninteractive_plot"
  },
  {
    "objectID": "Cap2_Mapas.html#unir-panel-a-b-y-c",
    "href": "Cap2_Mapas.html#unir-panel-a-b-y-c",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.6 Unir Panel A, B y C",
    "text": "3.6 Unir Panel A, B y C\n\n# Layout con patchwork: mapa arriba, boxplot + line_chart abajo\nlayout_total &lt;- p_jaguar | (box_plot / line_chart) + plot_layout(widths = c(0.45, 0.1, 0.45)) \n#+ plot_layout(heights = c(0.5, 0.5))  # mitad mapa, mitad box + línea\n\n# Convertir todo en visualización interactiva\ninteractive_plot &lt;- girafe(\n  ggobj = layout_total,\n  options = list(\n    opts_hover(css = ''),\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_sizing(rescale = FALSE)\n  ),\n  height_svg = 6,\n  width_svg = 8\n)\n\ninteractive_plot\n\n\n\n\n\nGuardar el plot interactivo\n\nhtmltools::save_html(interactive_plot, \"graphs/multiple-ggiraph-1.html\")"
  },
  {
    "objectID": "Cap2_Mapas.html#referencias",
    "href": "Cap2_Mapas.html#referencias",
    "title": "3  Visualización gráfica de los datos",
    "section": "3.7 Referencias",
    "text": "3.7 Referencias\n\nCreating interactive visualizations with {ggiraph} (with or without Shiny)\nMore complex CSS\nggiraph manual"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "4  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]